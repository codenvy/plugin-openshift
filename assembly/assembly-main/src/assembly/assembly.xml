<!--

    Copyright (c) 2012-2016 Codenvy, S.A.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
      Codenvy, S.A. - initial API and implementation

-->
<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
    <id>tomcat-zip</id>
    <formats>
        <format>dir</format>
        <format>zip</format>
        <format>tar.gz</format>
    </formats>
    <dependencySets>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>ide.war</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che:assembly-ide-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>wsmaster.war</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che:assembly-wsmaster-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>dashboard.war</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che.dashboard:che-dashboard-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>swagger.war</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che.lib:che-swagger-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>lib</outputDirectory>
            <outputFileNameMapping>ws-agent.zip</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che:assembly-wsagent-server</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>true</unpack>
            <outputDirectory>lib/linux_amd64</outputDirectory>
            <includes>
                <include>org.eclipse.che.lib:che-websocket-terminal:zip:linux_amd64</include>
            </includes>
            <unpackOptions>
                <excludes>
                    <exclude>META-INF/**</exclude>
                </excludes>
            </unpackOptions>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>true</unpack>
            <outputDirectory>lib/linux_arm7</outputDirectory>
            <includes>
                <include>org.eclipse.che.lib:che-websocket-terminal:zip:linux_arm7</include>
            </includes>
            <unpackOptions>
                <excludes>
                    <exclude>META-INF/**</exclude>
                </excludes>
            </unpackOptions>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>sdk</outputDirectory>
            <outputFileNameMapping>che-plugin-sdk-tools.jar</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che.plugin:che-plugin-sdk-tools</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>sdk</outputDirectory>
            <outputFileNameMapping>che-plugin-sdk-logger.jar</outputFileNameMapping>
            <includes>
                <include>ch.qos.logback:logback-classic</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>sdk</outputDirectory>
            <outputFileNameMapping>che-plugin-sdk-logger-core.jar</outputFileNameMapping>
            <includes>
                <include>ch.qos.logback:logback-core</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>true</unpack>
            <outputDirectory>stacks</outputDirectory>
            <includes>
                <include>org.eclipse.che.core:che-core-ide-stacks</include>
            </includes>
            <unpackOptions>
                <excludes>
                    <exclude>META-INF/**</exclude>
                </excludes>
            </unpackOptions>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>true</unpack>
            <outputDirectory>templates</outputDirectory>
            <includes>
                <include>org.eclipse.che.core:che-core-ide-templates</include>
            </includes>
            <unpackOptions>
                <excludes>
                    <exclude>META-INF/**</exclude>
                </excludes>
            </unpackOptions>
        </dependencySet>
    </dependencySets>
    <fileSets>
        <fileSet>
            <directory>${project.build.directory}/dependency/</directory>
            <outputDirectory>tomcat/</outputDirectory>
            <excludes>
                <exclude>bin/*.bat</exclude>
            </excludes>
       </fileSet>
        <fileSet>
            <directory>${project.basedir}/src/assembly/bin</directory>
            <outputDirectory>bin</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/src/assembly/plugins</directory>
            <outputDirectory>plugins</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/src/assembly/webapps</directory>
            <outputDirectory>tomcat/webapps</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>${project.parent.basedir}/assembly-wsmaster-war/src/main/webapp/WEB-INF/classes/codenvy</directory>
            <outputDirectory>conf</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/src/assembly</directory>
            <outputDirectory></outputDirectory>
            <includes>
              <include>LICENSE</include>
              <include>README</include>
           </includes>
        </fileSet>
        <fileSet>
            <directory>${project.parent.basedir}/assembly-wsagent-war</directory>
            <outputDirectory>sdk/assembly-wsagent-war</outputDirectory>
            <excludes>
            <exclude>**/target/**</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>${project.parent.basedir}/assembly-wsagent-server</directory>
            <outputDirectory>sdk/assembly-wsagent-server</outputDirectory>
            <excludes>
            <exclude>**/target/**</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>${project.parent.basedir}/assembly-ide-war</directory>
            <outputDirectory>sdk/assembly-ide-war</outputDirectory>
            <excludes>
            <exclude>**/target/**</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>${project.parent.basedir}/assembly-main</directory>
            <outputDirectory>sdk/assembly-main</outputDirectory>
            <excludes>
            <exclude>**/target/**</exclude>
            </excludes>
        </fileSet>
    </fileSets>
      <files>
        <file>
            <source>${project.basedir}/src/assembly/bin/che.sh</source>
            <outputDirectory>bin</outputDirectory>
            <destName>che.sh</destName>
            <fileMode>755</fileMode>
        </file>
        <file>
            <source>${project.basedir}/src/assembly/bin/che.bat</source>
            <outputDirectory>bin</outputDirectory>
            <destName>che.bat</destName>
            <fileMode>755</fileMode>
        </file>
        <file>
            <source>${project.basedir}/src/assembly/bin/che-install-plugin.sh</source>
            <outputDirectory>bin</outputDirectory>
            <destName>che-install-plugin.sh</destName>
            <fileMode>755</fileMode>
        </file>
        <file>
            <source>${project.basedir}/src/assembly/bin/che-install-plugin.bat</source>
            <outputDirectory>bin</outputDirectory>
            <destName>che-install-plugin.bat</destName>
            <fileMode>755</fileMode>
        </file>
        <file>
            <source>${project.basedir}/src/assembly/tomcat/conf/server.xml</source>
            <outputDirectory>tomcat/conf</outputDirectory>
            <destName>server.xml</destName>
            <fileMode>755</fileMode>
        </file>
    </files>
</assembly>
